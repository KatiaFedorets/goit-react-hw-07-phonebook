{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContactsSuccess","createAction","addContactsError","addContactsRequest","deleteContactsSuccess","deleteContactsError","deleteContactsRequest","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","changeFilter","items","createReducer","actions","_","payload","state","filter","item","id","error","addContactRequest","addContactSuccess","addContactError","deleteContactError","deleteContactRequest","combineReducers","store","configureStore","reducer","contacts","contactsReducer","middleware","getDefaultMiddleware","devTools","process","axios","defaults","baseURL","contact","dispatch","post","then","data","catch","delete","get","getAllContacts","getFilterContacts","getVisibleContacts","createSelector","name","searchFilter","toLowerCase","includes","getError","ContactList","onDeleteContacts","className","styles","list","map","list_item","list_text","number","type","onClick","list_button","defaultProps","onDeleteContact","connect","contactsSelectors","text","contactsOperations","ContactForm","handelNameChange","event","setState","target","value","handleSubmit","preventDefault","props","find","alert","onSubmit","resetForm","this","form","label","pattern","title","required","onChange","input","button","Component","e","contactsActions","children","div","length","App","fetchContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af6581ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"App_div__21psy\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\nconst addContactsError = createAction(\"contacts/addContactsError\");\nconst addContactsRequest = createAction(\"contacts/addContactsRequest\");\n\nconst deleteContactsSuccess = createAction(\"contacts/deleteContactsSuccess\");\nconst deleteContactsError = createAction(\"contacts/deleteContactsError\");\nconst deleteContactsRequest = createAction(\"contacts/deleteContactsRequest\");\n\nconst fetchContactsRequest = createAction(\"phoneBook/fetchContactsRequest\");\nconst fetchContactsSuccess = createAction(\"phoneBook/fetchContactsSuccess\");\nconst fetchContactsError = createAction(\"phoneBook/fetchContactsError\");\n\nconst changeFilter = createAction(\"phonebook/change-filter\");\n\nexport default {\n  addContactsSuccess,\n  addContactsError,\n  addContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  deleteContactsRequest,\n  fetchContactsError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  changeFilter\n};\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport actions from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [actions.addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [actions.deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(item => item.id !== payload),\n\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload\n});\n\nconst error = createReducer(false, {\n  [actions.addContactRequest]: () => false,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: (state, { payload }) => payload,\n  [actions.deleteContactError]: (state, { payload }) => payload,\n  [actions.deleteContactsSuccess]: () => false,\n  [actions.deleteContactRequest]: () => false,\n  [actions.fetchContactsError]: (state, { payload }) => payload,\n  [actions.fetchContactsRequest]: () => true,\n  [actions.fetchContactsSuccess]: () => false\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload\n});\n\nexport default combineReducers({\n  items,\n  error,\n  filter\n});\n","import contactsReducer from \"../redux/contacts/contacts-reducer\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer\n  },\n  middleware: getDefaultMiddleware,\n  devTools: process.env.NODE_ENV !== \"production\"\n});\n\nexport default store;\n","import axios from \"axios\";\nimport actions from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"http://localhost:2000\";\n\nconst addContact = contact => dispatch => {\n  dispatch(actions.addContactsRequest());\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(actions.addContactsSuccess(data)))\n    .catch(error => dispatch(actions.addContactsError(error)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(actions.deleteContactsRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(actions.deleteContactsSuccess(id)))\n    .catch(error => dispatch(actions.deleteContactsError(error)));\n};\n\nconst fetchContacts = () => dispatch => {\n  dispatch(actions.fetchContactsRequest());\n  axios\n    .get(`/contacts/`)\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\n    .catch(error => dispatch(actions.fetchContactsError(error)));\n};\n\nexport default {\n  addContact,\n  deleteContact,\n  fetchContacts\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getAllContacts = state => state.contacts.items;\nconst getFilterContacts = state => state.contacts.filter;\nconst getError = state => state.error;\n\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilterContacts],\n  (contacts, filter) =>\n    contacts.filter(({ name }) => {\n      const searchFilter = filter.toLowerCase();\n      return name.toLowerCase().includes(searchFilter);\n    })\n);\n\nexport default {\n  getAllContacts,\n  getVisibleContacts,\n  getFilterContacts,\n  getError\n};\n","import styles from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\nimport contactsSelectors from \"../../redux/contacts/contacts-selectors\";\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <ul className={styles.list}>\n    {contacts.map(contact => (\n      <li key={contact.id} className={styles.list_item}>\n        <span className={styles.list_text}>{contact.name}:</span>\n        <span className={styles.list_text}>{contact.number}</span>\n        <button\n          type=\"button\"\n          onClick={() => onDeleteContacts(contact.id)}\n          className={styles.list_button}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nconst mapStateToProps = state => {\n  return {\n    contacts: contactsSelectors.getVisibleContacts(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContacts: text => dispatch(contactsOperations.deleteContact(text))\n});\n\nContactList.defaultProps = {\n  contacts: [],\n  onDeleteContact: () => {}\n};\n\nContactList.propTypes = {\n  onDeleteContacts: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired\n    })\n  )\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\nimport contactsSelectors from \"../../redux/contacts/contacts-selectors\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\"\n  };\n\n  handelNameChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name } = this.state;\n    const isNameExist = this.props.items.find(item => item.name === name);\n    if (isNameExist) {\n      alert(`${name} is already in contacts`);\n    } else {\n      this.props.onSubmit(this.state);\n    }\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: \"\",\n      number: \"\"\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label className={styles.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handelNameChange}\n            className={styles.input}\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            // pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            // title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            // required\n            value={this.state.number}\n            onChange={this.handelNameChange}\n            className={styles.input}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  items: contactsSelectors.getAllContacts(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: text => dispatch(contactsOperations.addContact(text))\n});\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired\n    })\n  )\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\nimport contactsSelectors from \"../../redux/contacts/contacts-selectors\";\n\nconst Filter = ({ filter, items, onChange, children }) => {\n  return (\n    <div className={styles.div}>\n      {items.length > 0 && (\n        <label className={styles.label}>\n          Find contact by name\n          <input\n            type=\"text\"\n            value={filter}\n            onChange={onChange}\n            className={styles.input}\n          ></input>\n        </label>\n      )}\n      {children}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  items: contactsSelectors.getAllContacts(state),\n  filter: contactsSelectors.getFilterContacts(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.changeFilter(e.target.value))\n});\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport styles from \"./App.module.css\";\nimport contactsActions from \"../src/redux/contacts/contacts-operations\";\nimport contactsSelectors from \"../src/redux/contacts/contacts-selectors\";\n\nimport \"normalize.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div className={styles.div}>\n        <h2>Phonebook</h2>\n        <ContactForm />\n\n        <Filter>\n          <h2>Contact</h2>\n        </Filter>\n\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  error: contactsSelectors.getError(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsActions.fetchContacts())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"list_item\":\"ContactList_list_item__3uTNX\",\"list_text\":\"ContactList_list_text__16cIL\",\"list_button\":\"ContactList_list_button__3NhD0\"};"],"sourceRoot":""}