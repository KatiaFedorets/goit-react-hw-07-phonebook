{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/Container/Container.module.css","components/Container/Container.jsx","redux/auth/auth-selectors.js","components/Navigation.jsx","components/UserMenu/UserMenu.jsx","components/AuthNav.jsx","components/AppBar.jsx","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js","redux/contacts/contacts-actions.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","operationsExportObject","register","credentials","dispatch","a","authActions","registerRequest","post","response","data","registerSuccess","registerError","message","logOut","logoutRequest","logoutSuccess","logoutError","logIn","loginRequest","loginSuccess","loginError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","console","log","getCurrentUserSuccess","getCurrentUserError","createAction","actionExportObject","module","exports","Container","children","className","styles","selectorsExportObject","getIsAuthenticated","state","isAuthenticated","getUsername","user","name","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","authSelectors","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","authOperations","type","onClick","AuthNav","header","justifyContent","borderBottom","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","fallback","path","reducersExportObject","items","createReducer","actions","fetchContactsSuccess","_","payload","addContactsSuccess","deleteContactsSuccess","filter","item","id","error","addContactRequest","addContactSuccess","addContactError","deleteContactError","deleteContactRequest","fetchContactsError","fetchContactsRequest","changeFilter","combineReducers","initialUserState","email","setError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","storeExportObject","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","addContactsError","addContactsRequest","deleteContactsError","deleteContactsRequest","actionsExportObject"],"mappings":"oMAGAA,IAAMC,SAASC,QAAU,wCAEzB,IAAMC,EAAQ,SACRA,GACFH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAFtDA,EAAQ,WAKVH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAiE5CC,EAAyB,CAAEC,SA7DhB,SAAAC,GAAW,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DAC9BD,EAASE,IAAYC,mBADS,kBAILb,IAAMc,KAAK,gBAAiBL,GAJvB,OAItBM,EAJsB,OAM5BZ,EAAUY,EAASC,KAAKb,OACxBO,EAASE,IAAYK,gBAAgBF,EAASC,OAPlB,gDAS5BN,EAASE,IAAYM,cAAc,KAAMC,UATb,yDAAJ,uDA6DeC,OAnC5B,yDAAM,WAAMV,GAAN,SAAAC,EAAA,6DACnBD,EAASE,IAAYS,iBADF,kBAIXrB,IAAMc,KAAK,iBAJA,OAMjBX,IACAO,EAASE,IAAYU,iBAPJ,gDASjBZ,EAASE,IAAYW,YAAY,KAAMJ,UATtB,yDAAN,uDAmCoCK,MAhDrC,SAAAf,GAAW,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DAC3BD,EAASE,IAAYa,gBADM,kBAIFzB,IAAMc,KAAK,eAAgBL,GAJzB,OAInBM,EAJmB,OAMzBZ,EAAUY,EAASC,KAAKb,OACxBO,EAASE,IAAYc,aAAaX,EAASC,OAPlB,gDASzBN,EAASE,IAAYe,WAAW,KAAMR,UATb,yDAAJ,uDAgDiCS,eAtBnC,yDAAM,WAAOlB,EAAUmB,GAAjB,mBAAAlB,EAAA,2DAGvBkB,IADaC,EAFU,EAEzBC,KAAQ5B,MAFiB,wDAS3BA,EAAU2B,GACVpB,EAASE,IAAYoB,yBAVM,kBAaFhC,IAAMiC,IAAI,kBAbR,OAanBlB,EAbmB,OAczBmB,QAAQC,IAAIpB,EAASC,MAErBN,EAASE,IAAYwB,sBAAsBrB,EAASC,OAhB3B,kDAkBzBN,EAASE,IAAYyB,oBAAoB,KAAMlB,UAlBtB,0DAAN,0DAwBRZ,O,+BC7Ef,WAEMM,EAAkByB,YAAa,wBAC/BrB,EAAkBqB,YAAa,wBAC/BpB,EAAgBoB,YAAa,sBAE7Bb,EAAea,YAAa,qBAC5BZ,EAAeY,YAAa,qBAC5BX,EAAaW,YAAa,mBAU1BC,EAAqB,CACzB1B,kBACAI,kBACAC,gBACAG,cAZoBiB,YAAa,sBAajChB,cAZoBgB,YAAa,sBAajCf,YAZkBe,YAAa,oBAa/Bb,eACAC,eACAC,aACAK,sBAd4BM,YAAa,8BAezCF,sBAd4BE,YAAa,8BAezCD,oBAd0BC,YAAa,6BAiB1BC,O,mBChCfC,EAAOC,QAAU,CAAC,UAAY,+B,8KCMfC,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAOH,UAAvB,SAAmCC,KCKtBG,EALe,CAC5BC,mBALyB,SAAAC,GAAK,OAAIA,EAAMjB,KAAKkB,iBAM7CC,YAJkB,SAAAF,GAAK,OAAIA,EAAMjB,KAAKoB,KAAKC,OCEvCP,EAAS,CACbQ,KAAM,CACJC,QAAS,eACTC,eAAgB,OAChBC,QAAS,GACTC,WAAY,IACZC,MAAO,WAETC,WAAY,CACVD,MAAO,YA2BIE,eAJS,SAAAZ,GAAK,MAAK,CAChCC,gBAAiBY,EAAcd,mBAAmBC,MAGrCY,EAvBI,SAAC,GAAD,IAAGX,EAAH,EAAGA,gBAAH,OACjB,gCACE,cAAC,IAAD,CAASa,GAAG,IAAIC,OAAK,EAACC,MAAOnB,EAAOQ,KAAMY,YAAapB,EAAOc,WAA9D,kBAICV,GACC,cAAC,IAAD,CACEa,GAAG,YACHC,OAAK,EACLC,MAAOnB,EAAOQ,KACdY,YAAapB,EAAOc,WAJtB,4B,QCnBAd,EAAS,CACbqB,UAAW,CACTZ,QAAS,OACTa,WAAY,UAEdC,OAAQ,CACNC,YAAa,GAEfjB,KAAM,CACJK,WAAY,IACZY,YAAa,KAiBXC,EAAqB,CACzBC,SAAUC,IAAepD,QAGZwC,eARS,SAAAZ,GAAK,MAAK,CAChCI,KAAMS,EAAcX,YAAYF,MAOMsB,EAAzBV,EAjBE,SAAC,GAAD,IAAGR,EAAH,EAAGA,KAAMmB,EAAT,EAASA,SAAT,OACf,sBAAKP,MAAOnB,EAAOqB,UAAnB,UAEE,uBAAMF,MAAOnB,EAAOO,KAApB,sBAAoCA,KACpC,wBAAQqB,KAAK,SAASC,QAASH,EAA/B,2BCrBE1B,EAAS,CACbQ,KAAM,CACJC,QAAS,eACTC,eAAgB,OAChBC,QAAS,GACTC,WAAY,IACZC,MAAO,WAETC,WAAY,CACVD,MAAO,YAyBIiB,EArBC,kBACd,gCACE,cAAC,IAAD,CACEb,GAAG,YACHC,OAAK,EACLC,MAAOnB,EAAOQ,KACdY,YAAapB,EAAOc,WAJtB,qBAQA,cAAC,IAAD,CACEG,GAAG,SACHC,OAAK,EACLC,MAAOnB,EAAOQ,KACdY,YAAapB,EAAOc,WAJtB,wBClBEd,EAAS,CACb+B,OAAQ,CACNtB,QAAS,OACTuB,eAAgB,gBAChBV,WAAY,SACZW,aAAc,sBAeHlB,eAJS,SAAAZ,GAAK,MAAK,CAChCC,gBAAiBY,EAAcd,mBAAmBC,MAGrCY,EAXA,SAAC,GAAD,IAAGX,EAAH,EAAGA,gBAAH,OACb,yBAAQe,MAAOnB,EAAO+B,OAAtB,UACE,cAAC,EAAD,IACC3B,EAAkB,cAAC,EAAD,IAAe,cAAC,EAAD,U,gBCIvBW,eAJS,SAAAZ,GAAK,MAAK,CAChCC,gBAAiBY,EAAcd,mBAAmBC,MAGrCY,EAlBM,SAAC,GAAD,IACRmB,EADQ,EACnBC,UACA/B,EAFmB,EAEnBA,gBACAgC,EAHmB,EAGnBA,WACGC,EAJgB,mEAMnB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACXnC,EAAkB,cAAC8B,EAAD,eAAeK,IAAY,cAAC,IAAD,CAAUtB,GAAImB,WCalDrB,eAJS,SAAAZ,GAAK,MAAK,CAChCC,gBAAiBY,EAAcd,mBAAmBC,MAGrCY,EAtBK,SAAC,GAAD,IACPmB,EADO,EAClBC,UACA/B,EAFkB,EAElBA,gBACAgC,EAHkB,EAGlBA,WACGC,EAJe,mEAMlB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACXnC,GAAmBiC,EAAWG,WAC5B,cAAC,IAAD,CAAUvB,GAAImB,IAEd,cAACF,EAAD,eAAeK,WCRjBE,EAAWC,gBAAK,kBAAM,gCACtBC,EAAeD,gBAAK,kBAAM,gCAC1BE,EAAYF,gBAAK,kBAAM,gCACvBG,EAAeH,gBAAK,kBAAM,gCAE1BI,E,uKACJ,WACEC,KAAKR,MAAMS,qB,oBAGb,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,WAAD,CAAUC,SAAU,2CAApB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAa/B,OAAK,EAACgC,KAAK,IAAIf,UAAWM,IACvC,cAAC,EAAD,CACES,KAAK,YACLV,YAAU,EACVJ,WAAW,YACXD,UAAWQ,IAEb,cAAC,EAAD,CACEO,KAAK,SACLV,YAAU,EACVJ,WAAW,YACXD,UAAWS,IAEb,cAAC,EAAD,CACEM,KAAK,YACLd,WAAW,SACXD,UAAWU,gB,GA3BPX,aAoCZT,EAAqB,CACzBuB,iBAAkBrB,IAAe5C,gBAGpBgC,cAAQ,KAAMU,EAAdV,CAAkC+B,G,oCCzB3CK,EAAuB,CAC3BC,MA1BYC,YAAc,IAAD,mBACxBC,IAAQC,sBAAuB,SAACC,EAAD,YAAMC,WADb,cAExBH,IAAQI,oBAAqB,SAACvD,EAAD,OAAUsD,EAAV,EAAUA,QAAV,4BAA4BtD,GAA5B,CAAmCsD,OAFxC,cAGxBH,IAAQK,uBAAwB,SAACxD,EAAD,OAAUsD,EAAV,EAAUA,QAAV,OAC/BtD,EAAMyD,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAOL,QAJV,cAMxBH,IAAQC,sBAAuB,SAACC,EAAD,YAAMC,WANb,IA2BzBM,MAlBYV,aAAc,GAAD,mBACxBC,IAAQU,mBAAoB,kBAAM,KADV,cAExBV,IAAQW,mBAAoB,kBAAM,KAFV,cAGxBX,IAAQY,iBAAkB,SAAC/D,EAAD,YAAUsD,WAHZ,cAIxBH,IAAQa,oBAAqB,SAAChE,EAAD,YAAUsD,WAJf,cAKxBH,IAAQK,uBAAwB,kBAAM,KALd,cAMxBL,IAAQc,sBAAuB,kBAAM,KANb,cAOxBd,IAAQe,oBAAqB,SAAClE,EAAD,YAAUsD,WAPf,cAQxBH,IAAQgB,sBAAuB,kBAAM,KARb,cASxBhB,IAAQC,sBAAuB,kBAAM,KATb,IAmBzBK,OAPaP,YAAc,GAAD,eACzBC,IAAQiB,cAAe,SAACf,EAAD,YAAMC,aASjBe,cAAgBrB,G,qCC/BzBsB,GAAmB,CAAElE,KAAM,KAAMmE,MAAO,MAExCpE,GAAO+C,YAAcoB,IAAD,iBAAC,EACxB1G,KAAYK,iBAAkB,SAACoF,EAAD,YAAMC,QAAsBnD,QADnC,YAAC,EAExBvC,KAAYc,cAAe,SAAC2E,EAAD,YAAMC,QAAsBnD,QAFhC,YAAC,EAGxBvC,KAAYU,eAAgB,kBAAMgG,MAHX,YAAC,EAIxB1G,KAAYwB,uBAAwB,SAACiE,EAAD,YAAMC,WAJnB,IAOpBnG,GAAQ+F,YAAc,MAAD,iBAAC,EACzBtF,KAAYK,iBAAkB,SAACoF,EAAD,YAAMC,QAAsBnG,SADlC,YAAC,EAEzBS,KAAYc,cAAe,SAAC2E,EAAD,YAAMC,QAAsBnG,SAF/B,YAAC,EAGzBS,KAAYU,eAAgB,kBAAM,QAHV,IAgBrBkG,GAAW,SAACnB,EAAD,YAAMC,SASjBN,GAAuB,CAC3B7C,QACAF,gBArBsBiD,aAAc,GAAD,mBAClCtF,KAAYK,iBAAkB,kBAAM,KADF,cAElCL,KAAYc,cAAe,kBAAM,KAFC,cAGlCd,KAAYwB,uBAAwB,kBAAM,KAHR,cAIlCxB,KAAYM,eAAgB,kBAAM,KAJA,cAKlCN,KAAYe,YAAa,kBAAM,KALG,cAMlCf,KAAYyB,qBAAsB,kBAAM,KANN,cAOlCzB,KAAYU,eAAgB,kBAAM,KAPA,IAsBnCnB,SACAyG,MAXYV,YAAc,MAAD,mBACxBtF,KAAYM,cAAgBsG,IADJ,cAExB5G,KAAYe,WAAa6F,IAFD,cAGxB5G,KAAYW,YAAciG,IAHF,cAIxB5G,KAAYyB,oBAAsBmF,IAJV,KAcZH,eAAgBrB,IC7BzByB,GAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAK1DC,GAAoB,CACxBC,IAAK,OACLC,aACAC,UAAW,CAAC,UAGRC,GAAQC,YAAe,CAC3BC,QAAS,CACP1G,KAAM2G,aAAeP,GAAmBQ,IACxCC,SAAUC,GAGZpB,cACAqB,UAAUC,IAOGC,GAFW,CAAET,SAAOU,UAFjBC,aAAaX,KC9B/BY,IAAShE,OACP,cAAC,IAAMiE,WAAP,UACE,cAAC,IAAD,CAAUb,MAAOA,GAAMA,MAAvB,SACE,cAAC,IAAD,CAAac,QAAS,KAAMJ,UAAWV,GAAMU,UAA7C,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKRK,SAASC,eAAe,U,+BCpB1B,WAEMhD,EAAqBjE,YAAa,+BAClCkH,EAAmBlH,YAAa,6BAChCmH,EAAqBnH,YAAa,+BAElCkE,EAAwBlE,YAAa,kCACrCoH,EAAsBpH,YAAa,gCACnCqH,EAAwBrH,YAAa,kCAErC6E,EAAuB7E,YAAa,kCACpC8D,EAAuB9D,YAAa,kCAKpCsH,EAAsB,CAC1BrD,qBACAiD,mBACAC,qBACAjD,wBACAkD,sBACAC,wBACAzC,mBAXyB5E,YAAa,gCAYtC6E,uBACAf,uBACAgB,aAZmB9E,YAAa,4BAenBsH,Q","file":"static/js/main.9fa58af4.chunk.js","sourcesContent":["import axios from \"axios\";\nimport authActions from \"./auth-actions\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  }\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post(\"/users/logout\");\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken }\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get(\"/users/current\");\n    console.log(response.data);\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nconst operationsExportObject = { register, logOut, logIn, getCurrentUser };\n\nexport default operationsExportObject;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction(\"auth/registerRequest\");\nconst registerSuccess = createAction(\"auth/registerSuccess\");\nconst registerError = createAction(\"auth/registerError\");\n\nconst loginRequest = createAction(\"auth/loginRequest\");\nconst loginSuccess = createAction(\"auth/loginSuccess\");\nconst loginError = createAction(\"auth/loginError\");\n\nconst logoutRequest = createAction(\"auth/logoutRequest\");\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\nconst logoutError = createAction(\"auth/logoutError\");\n\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n\nconst actionExportObject = {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError\n};\n\nexport default actionExportObject;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","import React from \"react\";\nimport styles from \"./Container.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nconst selectorsExportObject = {\n  getIsAuthenticated,\n  getUsername\n};\n\nexport default selectorsExportObject;\n","import { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\"\n  },\n  activeLink: {\n    color: \"#E84A5F\"\n  }\n};\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Home\n    </NavLink>\n\n    {isAuthenticated && (\n      <NavLink\n        to=\"/contacts\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Contacts\n      </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state)\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","import { connect } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\nimport authOperations from \"../../redux/auth/auth-operations\";\n\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    marginRight: 4\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12\n  }\n};\n\nconst UserMenu = ({ name, onLogout }) => (\n  <div style={styles.container}>\n\n    <span style={styles.name}>Welcome, {name}</span>\n    <button type=\"button\" onClick={onLogout}>\n      Log out\n    </button>\n  </div>\n);\nconst mapStateToProps = state => ({\n  name: authSelectors.getUsername(state)\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import { NavLink } from \"react-router-dom\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\"\n  },\n  activeLink: {\n    color: \"#E84A5F\"\n  }\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      SING UP\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      LOG IN\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Navigation from \"./Navigation\";\nimport UserMenu from \"./UserMenu/UserMenu\";\nimport AuthNav from \"./AuthNav\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\nconst styles = {\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid #2A363B\"\n  }\n};\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header style={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state)\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state)\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state)\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { Component, Suspense, lazy } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch } from \"react-router-dom\";\nimport Container from \"./components/Container/Container\";\nimport AppBar from \"./components/AppBar\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport authOperations from \"./redux/auth/auth-operations\";\n\nconst HomeView = lazy(() => import(\"./views/HomeView\"));\nconst RegisterView = lazy(() => import(\"./views/RegisterView\"));\nconst LoginView = lazy(() => import(\"./views/LoginView\"));\nconst ContactsView = lazy(() => import(\"./views/ContactsView\"));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <Container>\n        <AppBar />\n        <Suspense fallback={<p>Loading...</p>}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={RegisterView}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={LoginView}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              redirectTo=\"/login\"\n              component={ContactsView}\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport actions from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [actions.addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [actions.deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(item => item.id !== payload),\n\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload\n});\n\nconst error = createReducer(false, {\n  [actions.addContactRequest]: () => false,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: (state, { payload }) => payload,\n  [actions.deleteContactError]: (state, { payload }) => payload,\n  [actions.deleteContactsSuccess]: () => false,\n  [actions.deleteContactRequest]: () => false,\n  [actions.fetchContactsError]: (state, { payload }) => payload,\n  [actions.fetchContactsRequest]: () => true,\n  [actions.fetchContactsSuccess]: () => false\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload\n});\n\nconst reducersExportObject = {\n  items,\n  error,\n  filter\n};\n\nexport default combineReducers(reducersExportObject);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport authActions from \"./auth-actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError\n});\n\nconst reducersExportObject = {\n  user,\n  isAuthenticated,\n  token,\n  error\n};\n\nexport default combineReducers(reducersExportObject);\n","import contactsReducer from \"../redux/contacts/contacts-reducer\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER\n} from \"redux-persist\";\n\nimport storage from \"redux-persist/lib/storage\";\nimport authReducer from \"./auth/auth-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"]\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer\n  },\n\n  middleware,\n  devTools: process.env.NODE_ENV !== \"production\"\n});\n\nconst persistor = persistStore(store);\n\nconst storeExportObject = { store, persistor };\n\nexport default storeExportObject;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n// import \"modern-normalize/modern-normalize.css\";\n// import \"./styles/base.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\nconst addContactsError = createAction(\"contacts/addContactsError\");\nconst addContactsRequest = createAction(\"contacts/addContactsRequest\");\n\nconst deleteContactsSuccess = createAction(\"contacts/deleteContactsSuccess\");\nconst deleteContactsError = createAction(\"contacts/deleteContactsError\");\nconst deleteContactsRequest = createAction(\"contacts/deleteContactsRequest\");\n\nconst fetchContactsRequest = createAction(\"phoneBook/fetchContactsRequest\");\nconst fetchContactsSuccess = createAction(\"phoneBook/fetchContactsSuccess\");\nconst fetchContactsError = createAction(\"phoneBook/fetchContactsError\");\n\nconst changeFilter = createAction(\"phonebook/change-filter\");\n\nconst actionsExportObject = {\n  addContactsSuccess,\n  addContactsError,\n  addContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  deleteContactsRequest,\n  fetchContactsError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  changeFilter\n};\n\nexport default actionsExportObject;\n"],"sourceRoot":""}